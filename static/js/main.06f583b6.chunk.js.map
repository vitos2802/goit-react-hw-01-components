{"version":3,"sources":["components/Stats/Stats.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Description/Description.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem.module.css","components/Container/Container.module.css","components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Description/Description.js","components/Container/Container.js","components/Stats/Stats.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Description","user","avatar","name","tag","location","className","s","description","src","alt","Container","children","container","Stats","stats","followers","views","likes","statsItem","label","quantity","Profile","profile","randomColor","value","Math","round","random","Statistics","title","section","list","map","id","percentage","item","style","backgroundColor","FriendListItem","isOnline","friendItem","status","width","FriendList","friends","friendList","TransactionHistory","items","table","head","cell","type","amount","currency","row","App","statistic","transactions","ReactDOM","render","document","querySelector"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,MAAQ,qBAAqB,SAAW,0B,gBCA5HD,EAAOC,QAAU,CAAC,MAAQ,kCAAkC,KAAO,iCAAiC,IAAM,gCAAgC,KAAO,mC,gBCAjJD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,KAAO,0BAA0B,IAAM,yBAAyB,SAAW,gC,gBCAjLD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,2B,gBCAjID,EAAOC,QAAU,CAAC,WAAa,mCAAmC,OAAS,+BAA+B,OAAS,iC,+PCAnHD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,WAAa,iC,i8FCuBhBC,EArBK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAgCD,EAAhCC,OAAQC,EAAwBF,EAAxBE,KAAMC,EAAkBH,EAAlBG,IAAKC,EAAaJ,EAAbI,SAC3B,OACE,sBAAKC,UAAWC,IAAEC,YAAlB,UACE,qBAAKC,IAAKP,EAAQQ,IAAI,cAAcJ,UAAWC,IAAEL,SACjD,mBAAGI,UAAWC,IAAEJ,KAAhB,SAAuBA,IACvB,oBAAGG,UAAWC,IAAEH,IAAhB,cAAuBA,KACvB,mBAAGE,UAAWC,IAAEF,SAAhB,SAA2BA,Q,iBCJlBM,EAJG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKN,UAAWC,IAAEM,UAAlB,SAA8BD,K,gBC4BxBE,EA5BD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACPC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAC1B,OACE,qBAAIZ,UAAWC,IAAEQ,MAAjB,UACE,qBAAIT,UAAWC,IAAEY,UAAjB,UACE,sBAAMb,UAAWC,IAAEa,MAAnB,uBACA,sBAAMd,UAAWC,IAAEc,SAAnB,SAA8BL,OAEhC,qBAAIV,UAAWC,IAAEY,UAAjB,UACE,sBAAMb,UAAWC,IAAEa,MAAnB,mBACA,sBAAMd,UAAWC,IAAEc,SAAnB,SAA8BJ,OAEhC,qBAAIX,UAAWC,IAAEY,UAAjB,UACE,sBAAMb,UAAWC,IAAEa,MAAnB,mBACA,sBAAMd,UAAWC,IAAEc,SAAnB,SAA8BH,W,wBCAvBI,EAXC,WACd,OACE,cAAC,EAAD,UACE,sBAAKhB,UAAWC,IAAEgB,QAAlB,UACE,cAAC,EAAD,CAAatB,KAAMA,IACnB,cAAC,EAAD,CAAOc,MAAOd,EAAKc,c,gBCPrBS,EAAc,WAClB,IAAMC,EAAQ,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,WACpC,MAAM,OAAN,OAAcH,IAAd,aAA0BA,IAA1B,aAAsCA,IAAtC,MAsCaI,EAnCI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOf,EAAY,EAAZA,MAC3B,OACE,0BAAST,UAAWC,IAAEwB,QAAtB,UACGD,GAAS,oBAAIxB,UAAWC,IAAEuB,MAAjB,SAAyBA,IACnC,cAAC,EAAD,UACE,oBAAIxB,UAAWC,IAAEyB,KAAjB,SACGjB,EAAMkB,KAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,GAAId,EAAwB,EAAxBA,MAAOe,EAAiB,EAAjBA,WACvB,OACE,qBAEE7B,UAAWC,IAAE6B,KACbC,MAAO,CAAEC,gBAAiBd,KAH5B,UAKE,+BAAOJ,IACP,iCAAOe,EAAP,SALKD,c,gBCKNK,EApBQ,SAAC,GAAoC,IAAlCL,EAAiC,EAAjCA,GAAIM,EAA6B,EAA7BA,SAAUtC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC9C,OACE,qBAAaG,UAAWC,IAAEkC,WAA1B,UACE,sBACEnC,UAAWC,IAAEmC,OACbL,MAAO,CAAEC,gBAAiBE,EAAW,QAAU,SAEjD,qBAAK/B,IAAKP,EAAQQ,IAAKP,EAAMwC,MAAM,KAAKrC,UAAWC,IAAEL,SACrD,4BAAIC,MANG+B,I,iBCqBEU,EArBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,cAAC,EAAD,UACE,oBAAIvC,UAAWC,IAAEuC,WAAjB,SACGD,EAAQZ,KAAI,gBAAGC,EAAH,EAAGA,GAAI/B,EAAP,EAAOA,KAAMD,EAAb,EAAaA,OAAQsC,EAArB,EAAqBA,SAArB,OACX,cAAC,EAAD,CACEN,GAAIA,EACJ/B,KAAMA,EACND,OAAQA,EACRsC,SAAUA,Y,gBC6BPO,EAvCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,cAAC,EAAD,UACE,wBAAO1C,UAAWC,IAAE0C,MAApB,UACE,gCACE,qBAAI3C,UAAWC,IAAE2C,KAAjB,UACE,oBAAI5C,UAAWC,IAAE4C,KAAjB,kBACA,oBAAI7C,UAAWC,IAAE4C,KAAjB,oBACA,oBAAI7C,UAAWC,IAAE4C,KAAjB,2BAIJ,gCACGH,EAAMf,KAAI,YAAqC,IAAlCmB,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,SAAUpB,EAAS,EAATA,GACpC,OACE,qBAAa5B,UAAWC,IAAEgD,IAA1B,UACE,oBAAIjD,UAAWC,IAAE4C,KAAjB,SAAwBC,IACxB,oBAAI9C,UAAWC,IAAE4C,KAAjB,SAAwBE,IACxB,oBAAI/C,UAAWC,IAAE4C,KAAjB,SAAwBG,MAHjBpB,c,wBCARsB,EAXH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAY1B,MAAM,eAAef,MAAO0C,IACxC,cAAC,EAAD,CAAYZ,QAASA,IACrB,cAAC,EAAD,CAAoBG,MAAOU,Q,MCVjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.06f583b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__qDMgZ\",\"statsItem\":\"Stats_statsItem__ddY5z\",\"label\":\"Stats_label__39_HE\",\"quantity\":\"Stats_quantity__WHE8U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__Cx0DG\",\"head\":\"TransactionHistory_head__3ikYZ\",\"row\":\"TransactionHistory_row__M-k6Z\",\"cell\":\"TransactionHistory_cell__2PI9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Description_description__A2_mH\",\"avatar\":\"Description_avatar__1wn-I\",\"name\":\"Description_name__T833z\",\"tag\":\"Description_tag__N2I_I\",\"location\":\"Description_location__2Us6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Statistics_section__2RmRB\",\"title\":\"Statistics_title__KwrYN\",\"list\":\"Statistics_list__3VyT7\",\"item\":\"Statistics_item__VPuKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendItem\":\"FriendListItem_friendItem__3Dg8D\",\"status\":\"FriendListItem_status__w1ZYF\",\"avatar\":\"FriendListItem_avatar__rwNPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__SIuZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2z9hW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3fNLF\"};","import PropTypes from 'prop-types';\nimport s from './Description.module.css';\n\nconst Description = ({ user }) => {\n  const { avatar, name, tag, location } = user;\n  return (\n    <div className={s.description}>\n      <img src={avatar} alt=\"user avatar\" className={s.avatar} />\n      <p className={s.name}>{name}</p>\n      <p className={s.tag}>@{tag}</p>\n      <p className={s.location}>{location}</p>\n    </div>\n  );\n};\n\nDescription.propTypes = {\n  user: PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Description;\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Stats.module.css';\n\nconst Stats = ({ stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <ul className={s.stats}>\n      <li className={s.statsItem}>\n        <span className={s.label}>Followers</span>\n        <span className={s.quantity}>{followers}</span>\n      </li>\n      <li className={s.statsItem}>\n        <span className={s.label}>Views</span>\n        <span className={s.quantity}>{views}</span>\n      </li>\n      <li className={s.statsItem}>\n        <span className={s.label}>Likes</span>\n        <span className={s.quantity}>{likes}</span>\n      </li>\n    </ul>\n  );\n};\n\nStats.propTypes = {\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Stats;\n","import Description from '../Description/Description.js';\nimport Container from '../Container/Container';\nimport Stats from '../Stats/Stats.js';\nimport user from '../../data/user.json';\nimport s from './Profile.module.css';\n\nconst Profile = () => {\n  return (\n    <Container>\n      <div className={s.profile}>\n        <Description user={user} />\n        <Stats stats={user.stats} />\n      </div>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport Container from '../Container/Container';\nimport s from './Statistics.module.css';\n\nconst randomColor = () => {\n  const value = () => Math.round(Math.random() * 255);\n  return `rgb(${value()}, ${value()}, ${value()})`;\n};\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <Container>\n        <ul className={s.list}>\n          {stats.map(({ id, label, percentage }) => {\n            return (\n              <li\n                key={id}\n                className={s.item}\n                style={{ backgroundColor: randomColor() }}\n              >\n                <span>{label}</span>\n                <span>{percentage}%</span>\n              </li>\n            );\n          })}\n        </ul>\n      </Container>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\n\nconst FriendListItem = ({ id, isOnline, avatar, name }) => {\n  return (\n    <li key={id} className={s.friendItem}>\n      <span\n        className={s.status}\n        style={{ backgroundColor: isOnline ? 'green' : 'red' }}\n      ></span>\n      <img src={avatar} alt={name} width=\"48\" className={s.avatar} />\n      <p>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport Container from '../Container/Container';\nimport s from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <Container>\n      <ul className={s.friendList}>\n        {friends.map(({ id, name, avatar, isOnline }) => (\n          <FriendListItem\n            id={id}\n            name={name}\n            avatar={avatar}\n            isOnline={isOnline}\n          />\n        ))}\n      </ul>\n    </Container>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport Container from '../Container/Container';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <Container>\n      <table className={s.table}>\n        <thead>\n          <tr className={s.head}>\n            <th className={s.cell}>Type</th>\n            <th className={s.cell}>Amount</th>\n            <th className={s.cell}>Currency</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {items.map(({ type, amount, currency, id }) => {\n            return (\n              <tr key={id} className={s.row}>\n                <td className={s.cell}>{type}</td>\n                <td className={s.cell}>{amount}</td>\n                <td className={s.cell}>{currency}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Container>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from './Profile/Profile';\nimport Statistics from './Statistics/Statistics';\nimport FriendList from './FriendList/FriendList';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport statistic from '../data/statistical-data.json';\nimport friends from '../data/friends.json';\nimport transactions from '../data/transactions.json';\n\nconst App = () => {\n  return (\n    <>\n      <Profile />\n      <Statistics title=\"Upload stats\" stats={statistic} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App.js';\nimport './base.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}